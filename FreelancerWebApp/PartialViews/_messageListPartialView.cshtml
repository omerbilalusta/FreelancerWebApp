@using FreelancerWebApp.ViewModels

@model MessageListPartialViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<style type="text/css">
    .messages {
        height: 550px; /* Mesajların gösterileceği alanın yüksekliğini belirtin */
        overflow-y: scroll; /* Kaydırma çubuğu oluşturun */
    }
</style>
@*<div class="user-bar">
    <div class="back">
        <a class="text-light" asp-contoller="message" asp-action="Index"><i class="zmdi zmdi-arrow-left"></i></a>
    </div>
    <div class="name" style="padding-left:2%;">
        <span>Zeno Rocha</span>
        <span class="status">offline</span>
    </div>
    <div class="actions more">
        <i class="zmdi zmdi-more-vert"></i>
    </div>
    <div class="actions attachment">
        <i class="zmdi zmdi-attachment-alt"></i>
    </div>
    <div class="actions">
        <i class="zmdi zmdi-phone"></i>
    </div>
</div>*@
<div id="div1" class="messages" onload="asd()">
        @foreach (var item in Model.Messages)
        {
            if (item.userEmail == ViewBag.user)
            {
            <div class="message sent  mt-2">
                <div class="row">
                    <div classc="col">
                        <p>@item.userEmail</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-8">
                        <p class="mt-2">@item.message_text</p>
                    </div>
                    <div class="col-4">
                        <h6 class="text-muted text-sm-end">
                            @*Created at*@
                            <span class="metadata">
                                <span class="time">
                                    @if (item.date_created.ToString().Length < 20)
                                    {
                                        <text>@item.date_created.ToString().Substring(0,16)</text>
                                    }
                                    else
                                    {
                                        <text>@item.date_created Failure</text>
                                    }
                                </span>
                            </span>
                        </h6>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="message received mt-2">
                <div class="row">
                    <div classc="col">
                        <p>@item.userEmail</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <p class="mt-2">@item.message_text</p>
                    </div>
                    <div class="col-6">
                        <h6 class="text-muted text-sm-end">
                            @*Created at*@
                            <span class="metadata">
                                <span class="time">
                                    @if (item.date_created.ToString().Length < 20)
                                    {
                                        <text>@item.date_created.ToString().Substring(0,16)</text>
                                    }
                                    else
                                    {
                                        <text>@item.date_created Failure</text>
                                    }
                                </span>
                            </span>
                        </h6>
                    </div>
                </div>
            </div>
        }
        }
    </div>


<style type="text/css">
    .likecontainer {
        padding: 2% 5% 5% 1%;
        box-shadow: 0 2px 8px rgba(0,0,0, 0.1);
        border-radius: 30px;
        background-color: #ffffff;
    }
    .likecontainer_sent {
        padding: 2% 5% 5% 1%;
        box-shadow: 0 2px 8px rgba(0,0,0, 0.1);
        border-radius: 5px 0px 5px 5px;
        background-color: #cece37;
        float:right;
        border-width: 0px 10px 10px 0;
        border-color: transparent #02C41C transparent transparent;
    }

    .likecontainer_received {
        padding: 2% 5% 5% 1%;
        box-shadow: 0 2px 8px rgba(0,0,0, 0.1);
        border-radius: 0px 5px 5px 5px;
        background-color: #02C41C;
        float: left;
        border-width: 0px 10px 10px 0;
        border-color: transparent #cece37 transparent transparent;
    }

    .metadata {
        display: inline-block;
        float: right;
        padding: 0 0 0 7px;
        position: relative;
        bottom: -4px;
        
    }

        .metadata .time {
            color: rgba(0, 0, 0, 0.45);
            font-size: 12px;
            display: inline-block;
        }

    .message.received {
        background: #cece37;
        border-radius: 0px 5px 5px 5px;
        float: left;
    }

        .message.received .metadata {
            padding: 0 0 0 16px;
        }

        .message.received:after {
            border-width: 0px 10px 10px 0;
            border-color: transparent #cece37 transparent transparent;
            top: 0;
            left: -10px;
        }

    .message.sent {
        background: #02C41C;
        border-radius: 5px 0px 5px 5px;
        float: right;
    }

        .message.sent:after {
            border-width: 0px 0 10px 10px;
            border-color: transparent transparent transparent #02C41C;
            top: 0;
            right: -10px;
        }
        .message {
        color: #000;
        clear: both;
        line-height: 18px;
        font-size: 15px;
        padding: 8px;
        position: relative;
        margin: 8px 0;
        max-width:85%;
        
        word-wrap: break-word;
        z-index: -1;
    }

        .message:after {
            position: absolute;
            content: "";
            width: 0;
            height: 0;
            border-style: solid;
        }


    
    /*.conversation {
        height: calc(100% - 12px);
        position: relative;
        background:#ffffff;
        background: #efe7dd url("https://cloud.githubusercontent.com/assets/398893/15136779/4e765036-1639-11e6-9201-67e728e86f39.jpg") repeat;
        z-index: 0;
    }*/

       /* .conversation ::-webkit-scrollbar {
            transition: all 0.5s;
            width: 5px;
            height: 1px;
            z-index: 10;
        }

        .conversation ::-webkit-scrollbar-track {
            background: transparent;
        }

        .conversation ::-webkit-scrollbar-thumb {
            background: #b3ada7;
        }

        .conversation .conversation-container {
            height: calc(100% - 68px);
            box-shadow: inset 0 10px 10px -10px #000000;
            overflow-x: hidden;
            
            padding: 0 16px;
            margin-bottom: 5px;
        }

            .conversation .conversation-container:after {
                content: "";
                display: table;
                clear: both;
            }

    .message {
        color: #000;
        clear: both;
        line-height: 18px;
        font-size: 15px;
        padding: 8px;
        position: relative;
        margin: 8px 0;
        max-width: 85%;
        word-wrap: break-word;
        z-index: -1;
    }

        .message:after {
            position: absolute;
            content: "";
            width: 0;
            height: 0;
            border-style: solid;
        }

    .metadata {
        display: inline-block;
        float: right;
        padding: 0 0 0 7px;
        position: relative;
        bottom: -4px;
    }

        .metadata .time {
            color: rgba(0, 0, 0, 0.45);
            font-size: 11px;
            display: inline-block;
        }

        .metadata .tick {
            display: inline-block;
            margin-left: 2px;
            position: relative;
            top: 4px;
            height: 16px;
            width: 16px;
        }

            .metadata .tick svg {
                position: absolute;
                transition: 0.5s ease-in-out;
            }

                .metadata .tick svg:first-child {
                    -webkit-backface-visibility: hidden;
                    backface-visibility: hidden;
                    -webkit-transform: perspective(800px) rotateY(180deg);
                    transform: perspective(800px) rotateY(180deg);
                }

                .metadata .tick svg:last-child {
                    -webkit-backface-visibility: hidden;
                    backface-visibility: hidden;
                    -webkit-transform: perspective(800px) rotateY(0deg);
                    transform: perspective(800px) rotateY(0deg);
                }

        .metadata .tick-animation svg:first-child {
            -webkit-transform: perspective(800px) rotateY(0);
            transform: perspective(800px) rotateY(0);
        }

        .metadata .tick-animation svg:last-child {
            -webkit-transform: perspective(800px) rotateY(-179.9deg);
            transform: perspective(800px) rotateY(-179.9deg);
        }

    .message:first-child {
        margin: 16px 0 8px;
    }

    .message.received {
        background: #fff;
        border-radius: 0px 5px 5px 5px;
        float: left;
    }

        .message.received .metadata {
            padding: 0 0 0 16px;
        }

        .message.received:after {
            border-width: 0px 10px 10px 0;
            border-color: transparent #fff transparent transparent;
            top: 0;
            left: -10px;
        }

    .message.sent {
        background: #e1ffc7;
        border-radius: 5px 0px 5px 5px;
        float: right;
    }

        .message.sent:after {
            border-width: 0px 0 10px 10px;
            border-color: transparent transparent transparent #e1ffc7;
            top: 0;
            right: -10px;
        }*/

</style>